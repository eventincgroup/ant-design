{"version":3,"sources":["descriptions/Col.jsx"],"names":["React","classNames","Col","props","child","bordered","colon","type","layout","prefixCls","label","className","children","span","labelProps","key","colSpan"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AAAA;;AACjB,MAAQC,KAAR,GAAiDD,KAAjD,CAAQC,KAAR;AAAA,MAAeC,QAAf,GAAiDF,KAAjD,CAAeE,QAAf;AAAA,MAAyBC,KAAzB,GAAiDH,KAAjD,CAAyBG,KAAzB;AAAA,MAAgCC,IAAhC,GAAiDJ,KAAjD,CAAgCI,IAAhC;AAAA,MAAsCC,MAAtC,GAAiDL,KAAjD,CAAsCK,MAAtC;AACA,qBAA4DJ,KAAK,CAACD,KAAlE;AAAA,MAAQM,SAAR,gBAAQA,SAAR;AAAA,MAAmBC,KAAnB,gBAAmBA,KAAnB;AAAA,MAA0BC,SAA1B,gBAA0BA,SAA1B;AAAA,MAAqCC,QAArC,gBAAqCA,QAArC;AAAA,uCAA+CC,IAA/C;AAAA,MAA+CA,IAA/C,kCAAsD,CAAtD;AACA,MAAMC,UAAU,GAAG;AACfH,IAAAA,SAAS,EAAEV,UAAU,WAAIQ,SAAJ,kBAA4BE,SAA5B,4DACbF,SADa,kBACYH,KADZ,0CAEbG,SAFa,qBAEe,CAACC,KAFhB,gBADN;AAKfK,IAAAA,GAAG,EAAE;AALU,GAAnB;;AAOA,MAAIP,MAAM,KAAK,UAAf,EAA2B;AACvBM,IAAAA,UAAU,CAACE,OAAX,GAAqBH,IAAI,GAAG,CAAP,GAAW,CAAhC;AACH;;AACD,MAAIR,QAAJ,EAAc;AACV,QAAIE,IAAI,KAAK,OAAb,EAAsB;AAClB,0BAAO,0BAAQO,UAAR,EAAqBJ,KAArB,CAAP;AACH;;AACD,wBAAQ;AAAI,MAAA,SAAS,EAAET,UAAU,WAAIQ,SAAJ,oBAA8BE,SAA9B,CAAzB;AAAmE,MAAA,GAAG,EAAC,SAAvE;AAAiF,MAAA,OAAO,EAAEE,IAAI,GAAG,CAAP,GAAW;AAArG,OACPD,QADO,CAAR;AAGH;;AACD,MAAIJ,MAAM,KAAK,UAAf,EAA2B;AACvB,QAAID,IAAI,KAAK,SAAb,EAAwB;AACpB,0BAAQ;AAAI,QAAA,OAAO,EAAEM,IAAb;AAAmB,QAAA,SAAS,EAAEZ,UAAU,WAAIQ,SAAJ,YAAsBE,SAAtB;AAAxC,sBACV;AAAM,QAAA,SAAS,YAAKF,SAAL,kBAAf;AAA8C,QAAA,GAAG,EAAC;AAAlD,SACGG,QADH,CADU,CAAR;AAKH;;AACD,wBAAQ;AAAI,MAAA,OAAO,EAAEC,IAAb;AAAmB,MAAA,SAAS,EAAEZ,UAAU,WAAIQ,SAAJ,YAAsBE,SAAtB;AAAxC,oBACR;AAAM,MAAA,SAAS,EAAEV,UAAU,WAAIQ,SAAJ,gDAAkCA,SAAlC,kBAA2DH,KAA3D,EAA3B;AAAgG,MAAA,GAAG,EAAC;AAApG,OACGI,KADH,CADQ,CAAR;AAKH;;AACD,sBAAQ;AAAI,IAAA,OAAO,EAAEG,IAAb;AAAmB,IAAA,SAAS,EAAEZ,UAAU,WAAIQ,SAAJ,YAAsBE,SAAtB;AAAxC,kBACN,4BAAUG,UAAV,EAAuBJ,KAAvB,CADM,eAEN;AAAM,IAAA,SAAS,YAAKD,SAAL,kBAAf;AAA8C,IAAA,GAAG,EAAC;AAAlD,KACGG,QADH,CAFM,CAAR;AAMH,CAzCD;;AA0CA,eAAeV,GAAf","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nconst Col = props => {\n    const { child, bordered, colon, type, layout } = props;\n    const { prefixCls, label, className, children, span = 1 } = child.props;\n    const labelProps = {\n        className: classNames(`${prefixCls}-item-label`, className, {\n            [`${prefixCls}-item-colon`]: colon,\n            [`${prefixCls}-item-no-label`]: !label,\n        }),\n        key: 'label',\n    };\n    if (layout === 'vertical') {\n        labelProps.colSpan = span * 2 - 1;\n    }\n    if (bordered) {\n        if (type === 'label') {\n            return <th {...labelProps}>{label}</th>;\n        }\n        return (<td className={classNames(`${prefixCls}-item-content`, className)} key=\"content\" colSpan={span * 2 - 1}>\n        {children}\n      </td>);\n    }\n    if (layout === 'vertical') {\n        if (type === 'content') {\n            return (<td colSpan={span} className={classNames(`${prefixCls}-item`, className)}>\n          <span className={`${prefixCls}-item-content`} key=\"content\">\n            {children}\n          </span>\n        </td>);\n        }\n        return (<td colSpan={span} className={classNames(`${prefixCls}-item`, className)}>\n        <span className={classNames(`${prefixCls}-item-label`, { [`${prefixCls}-item-colon`]: colon })} key=\"label\">\n          {label}\n        </span>\n      </td>);\n    }\n    return (<td colSpan={span} className={classNames(`${prefixCls}-item`, className)}>\n      <span {...labelProps}>{label}</span>\n      <span className={`${prefixCls}-item-content`} key=\"content\">\n        {children}\n      </span>\n    </td>);\n};\nexport default Col;\n"],"file":"Col.js"}