{"version":3,"sources":["calendar/Header.jsx"],"names":["React","Group","Button","ConfigConsumer","getMonthsLocale","value","current","clone","localeData","months","i","month","push","monthsShort","Header","arguments","onYearChange","year","props","validRange","newValue","parseInt","start","end","newYear","get","newMonth","onValueChange","onMonthChange","onInternalTypeChange","e","onTypeChange","target","type","getMonthYearSelections","getPrefixCls","customizePrefixCls","prefixCls","yearReactNode","getYearSelectElement","monthReactNode","getMonthSelectElement","getTypeSwitch","locale","fullscreen","size","headerRenderCustom","headerRender","onChange","renderHeader","typeSwitch","yearSelectOffset","yearSelectTotal","suffix","options","index","event","String","rangeStart","rangeEnd","currentYear","Component","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Group, Button } from '../radio';\nimport { ConfigConsumer } from '../config-provider';\nfunction getMonthsLocale(value) {\n    const current = value.clone();\n    const localeData = value.localeData();\n    const months = [];\n    for (let i = 0; i < 12; i++) {\n        current.month(i);\n        months.push(localeData.monthsShort(current));\n    }\n    return months;\n}\nexport default class Header extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.onYearChange = (year) => {\n            const { value, validRange } = this.props;\n            const newValue = value.clone();\n            newValue.year(parseInt(year, 10));\n            // switch the month so that it remains within range when year changes\n            if (validRange) {\n                const [start, end] = validRange;\n                const newYear = newValue.get('year');\n                const newMonth = newValue.get('month');\n                if (newYear === end.get('year') && newMonth > end.get('month')) {\n                    newValue.month(end.get('month'));\n                }\n                if (newYear === start.get('year') && newMonth < start.get('month')) {\n                    newValue.month(start.get('month'));\n                }\n            }\n            const { onValueChange } = this.props;\n            if (onValueChange) {\n                onValueChange(newValue);\n            }\n        };\n        this.onMonthChange = (month) => {\n            const newValue = this.props.value.clone();\n            newValue.month(parseInt(month, 10));\n            const { onValueChange } = this.props;\n            if (onValueChange) {\n                onValueChange(newValue);\n            }\n        };\n        this.onInternalTypeChange = (e) => {\n            this.onTypeChange(e.target.value);\n        };\n        this.onTypeChange = (type) => {\n            const { onTypeChange } = this.props;\n            if (onTypeChange) {\n                onTypeChange(type);\n            }\n        };\n        this.getMonthYearSelections = (getPrefixCls) => {\n            const { prefixCls: customizePrefixCls, type, value } = this.props;\n            const prefixCls = getPrefixCls('fullcalendar', customizePrefixCls);\n            const yearReactNode = this.getYearSelectElement(prefixCls, value.year());\n            const monthReactNode = type === 'month'\n                ? this.getMonthSelectElement(prefixCls, value.month(), getMonthsLocale(value))\n                : null;\n            return {\n                yearReactNode,\n                monthReactNode,\n            };\n        };\n        this.getTypeSwitch = () => {\n            const { locale = {}, type, fullscreen } = this.props;\n            const size = fullscreen ? 'default' : 'small';\n            return (<Group onChange={this.onInternalTypeChange} value={type} size={size}>\n        <Button value=\"month\">{locale.month}</Button>\n        <Button value=\"year\">{locale.year}</Button>\n      </Group>);\n        };\n        this.headerRenderCustom = (headerRender) => {\n            const { type, onValueChange, value } = this.props;\n            return headerRender({\n                value,\n                type: type || 'month',\n                onChange: onValueChange,\n                onTypeChange: this.onTypeChange,\n            });\n        };\n        this.renderHeader = ({ getPrefixCls }) => {\n            const { prefixCls, headerRender } = this.props;\n            const typeSwitch = this.getTypeSwitch();\n            const { yearReactNode, monthReactNode } = this.getMonthYearSelections(getPrefixCls);\n            return headerRender ? (this.headerRenderCustom(headerRender)) : (<div className={`${prefixCls}-header`}>\n        {yearReactNode}\n        {monthReactNode}\n        {typeSwitch}\n      </div>);\n        };\n    }\n    getYearSelectElement(prefixCls, year) {\n        const { yearSelectOffset, yearSelectTotal, locale = {}, validRange } = this.props;\n        let start = year - yearSelectOffset;\n        let end = start + yearSelectTotal;\n        if (validRange) {\n            start = validRange[0].get('year');\n            end = validRange[1].get('year') + 1;\n        }\n        const suffix = locale.year === '年' ? '年' : '';\n        const options = [];\n        for (let index = start; index < end; index++) {\n            options.push(<option key={index}>{index + suffix}</option>);\n        }\n        return (<select className={`${prefixCls}-year-select`} onChange={event => this.onYearChange(event.target.value)} value={String(year)}>\n        {options}\n      </select>);\n    }\n    getMonthSelectElement(prefixCls, month, months) {\n        const { validRange, value } = this.props;\n        const options = [];\n        let start = 0;\n        let end = 12;\n        if (validRange) {\n            const [rangeStart, rangeEnd] = validRange;\n            const currentYear = value.get('year');\n            if (rangeEnd.get('year') === currentYear) {\n                end = rangeEnd.get('month') + 1;\n            }\n            if (rangeStart.get('year') === currentYear) {\n                start = rangeStart.get('month');\n            }\n        }\n        for (let index = start; index < end; index++) {\n            options.push(<option key={index} value={index}>\n          {months[index]}\n        </option>);\n        }\n        return (<select className={`${prefixCls}-month-select`} value={String(month)} onChange={event => this.onMonthChange(event.target.value)}>\n        {options}\n      </select>);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderHeader}</ConfigConsumer>;\n    }\n}\nHeader.defaultProps = {\n    yearSelectOffset: 10,\n    yearSelectTotal: 20,\n};\n"],"file":"Header.js"}