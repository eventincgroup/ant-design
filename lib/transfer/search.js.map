{"version":3,"sources":["transfer/search.jsx"],"names":["Search","arguments","handleChange","e","onChange","props","handleClear","preventDefault","disabled","placeholder","value","prefixCls","icon","length","React","Component","defaultProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACqBA,M;;;;;AACjB,oBAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;;AACA,UAAKC,YAAL,GAAoB,UAACC,CAAD,EAAO;AACvB,UAAQC,QAAR,GAAqB,MAAKC,KAA1B,CAAQD,QAAR;;AACA,UAAIA,QAAJ,EAAc;AACVA,QAAAA,QAAQ,CAACD,CAAD,CAAR;AACH;AACJ,KALD;;AAMA,UAAKG,WAAL,GAAmB,UAACH,CAAD,EAAO;AACtBA,MAAAA,CAAC,CAACI,cAAF;AACA,wBAAkC,MAAKF,KAAvC;AAAA,UAAQC,WAAR,eAAQA,WAAR;AAAA,UAAqBE,QAArB,eAAqBA,QAArB;;AACA,UAAI,CAACA,QAAD,IAAaF,WAAjB,EAA8B;AAC1BA,QAAAA,WAAW,CAACH,CAAD,CAAX;AACH;AACJ,KAND;;AARU;AAeb;;;;WACD,kBAAS;AACL,yBAAoD,KAAKE,KAAzD;AAAA,UAAQI,WAAR,gBAAQA,WAAR;AAAA,UAAqBC,KAArB,gBAAqBA,KAArB;AAAA,UAA4BC,SAA5B,gBAA4BA,SAA5B;AAAA,UAAuCH,QAAvC,gBAAuCA,QAAvC;AACA,UAAMI,IAAI,GAAGF,KAAK,IAAIA,KAAK,CAACG,MAAN,GAAe,CAAxB,gBAA6B;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,YAAKF,SAAL,YAArB;AAA8C,QAAA,OAAO,EAAE,KAAKL;AAA5D,sBACxC,oBAAC,gBAAD;AAAM,QAAA,IAAI,EAAC,cAAX;AAA0B,QAAA,KAAK,EAAC;AAAhC,QADwC,CAA7B,gBAEJ;AAAM,QAAA,SAAS,YAAKK,SAAL;AAAf,sBACP,oBAAC,gBAAD;AAAM,QAAA,IAAI,EAAC;AAAX,QADO,CAFT;AAKA,0BAAQ,8CACR,oBAAC,iBAAD;AAAO,QAAA,WAAW,EAAEF,WAApB;AAAiC,QAAA,SAAS,EAAEE,SAA5C;AAAuD,QAAA,KAAK,EAAED,KAA9D;AAAqE,QAAA,QAAQ,EAAE,KAAKR,YAApF;AAAkG,QAAA,QAAQ,EAAEM;AAA5G,QADQ,EAEPI,IAFO,CAAR;AAIH;;;;EA5B+BE,KAAK,CAACC,S;;;AA8B1Cf,MAAM,CAACgB,YAAP,GAAsB;AAClBP,EAAAA,WAAW,EAAE;AADK,CAAtB","sourcesContent":["import * as React from 'react';\nimport Icon from '../icon';\nimport Input from '../input';\nexport default class Search extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleChange = (e) => {\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange(e);\n            }\n        };\n        this.handleClear = (e) => {\n            e.preventDefault();\n            const { handleClear, disabled } = this.props;\n            if (!disabled && handleClear) {\n                handleClear(e);\n            }\n        };\n    }\n    render() {\n        const { placeholder, value, prefixCls, disabled } = this.props;\n        const icon = value && value.length > 0 ? (<a href=\"#\" className={`${prefixCls}-action`} onClick={this.handleClear}>\n          <Icon type=\"close-circle\" theme=\"filled\"/>\n        </a>) : (<span className={`${prefixCls}-action`}>\n          <Icon type=\"search\"/>\n        </span>);\n        return (<div>\n        <Input placeholder={placeholder} className={prefixCls} value={value} onChange={this.handleChange} disabled={disabled}/>\n        {icon}\n      </div>);\n    }\n}\nSearch.defaultProps = {\n    placeholder: '',\n};\n"],"file":"search.js"}