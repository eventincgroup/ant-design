{"version":3,"sources":["alert/index.jsx"],"names":["noop","Alert","props","handleClose","e","preventDefault","dom","ReactDOM","findDOMNode","style","height","offsetHeight","setState","closing","onClose","animationEnd","closed","afterClose","renderAlert","getPrefixCls","description","customizePrefixCls","prefixCls","message","closeText","banner","className","icon","closable","type","showIcon","iconType","undefined","iconTheme","alertCls","state","closeIcon","dataOrAriaProps","iconNode","React","isValidElement","cloneElement","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport getDataOrAriaProps from '../_util/getDataOrAriaProps';\nimport warning from '../_util/warning';\nfunction noop() { }\nexport default class Alert extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = (e) => {\n            e.preventDefault();\n            const dom = ReactDOM.findDOMNode(this);\n            dom.style.height = `${dom.offsetHeight}px`;\n            // Magic code\n            // 重复一次后才能正确设置 height\n            dom.style.height = `${dom.offsetHeight}px`;\n            this.setState({\n                closing: false,\n            });\n            (this.props.onClose || noop)(e);\n        };\n        this.animationEnd = () => {\n            this.setState({\n                closed: true,\n                closing: true,\n            });\n            (this.props.afterClose || noop)();\n        };\n        this.renderAlert = ({ getPrefixCls }) => {\n            const { description, prefixCls: customizePrefixCls, message, closeText, banner, className = '', style, icon, } = this.props;\n            let { closable, type, showIcon, iconType } = this.props;\n            const prefixCls = getPrefixCls('alert', customizePrefixCls);\n            // banner模式默认有 Icon\n            showIcon = banner && showIcon === undefined ? true : showIcon;\n            // banner模式默认为警告\n            type = banner && type === undefined ? 'warning' : type || 'info';\n            let iconTheme = 'filled';\n            if (!iconType) {\n                switch (type) {\n                    case 'success':\n                        iconType = 'check-circle';\n                        break;\n                    case 'info':\n                        iconType = 'info-circle';\n                        break;\n                    case 'error':\n                        iconType = 'close-circle';\n                        break;\n                    case 'warning':\n                        iconType = 'exclamation-circle';\n                        break;\n                    default:\n                        iconType = 'default';\n                }\n                // use outline icon in alert with description\n                if (description) {\n                    iconTheme = 'outlined';\n                }\n            }\n            // closeable when closeText is assigned\n            if (closeText) {\n                closable = true;\n            }\n            const alertCls = classNames(prefixCls, `${prefixCls}-${type}`, {\n                [`${prefixCls}-close`]: !this.state.closing,\n                [`${prefixCls}-with-description`]: !!description,\n                [`${prefixCls}-no-icon`]: !showIcon,\n                [`${prefixCls}-banner`]: !!banner,\n                [`${prefixCls}-closable`]: closable,\n            }, className);\n            const closeIcon = closable ? (<button type=\"button\" onClick={this.handleClose} className={`${prefixCls}-close-icon`} tabIndex={0}>\n        {closeText ? (<span className={`${prefixCls}-close-text`}>{closeText}</span>) : (<Icon type=\"close\"/>)}\n      </button>) : null;\n            const dataOrAriaProps = getDataOrAriaProps(this.props);\n            const iconNode = (icon &&\n                (React.isValidElement(icon) ? (React.cloneElement(icon, {\n                    className: classNames({\n                        [icon.props.className]: icon.props.className,\n                        [`${prefixCls}-icon`]: true,\n                    }),\n                })) : (<span className={`${prefixCls}-icon`}>{icon}</span>))) || <Icon className={`${prefixCls}-icon`} type={iconType} theme={iconTheme}/>;\n            return this.state.closed ? null : (<Animate component=\"\" showProp=\"data-show\" transitionName={`${prefixCls}-slide-up`} onEnd={this.animationEnd}>\n        <div data-show={this.state.closing} className={alertCls} style={style} {...dataOrAriaProps}>\n          {showIcon ? iconNode : null}\n          <span className={`${prefixCls}-message`}>{message}</span>\n          <span className={`${prefixCls}-description`}>{description}</span>\n          {closeIcon}\n        </div>\n      </Animate>);\n        };\n        warning(!('iconType' in props), 'Alert', '`iconType` is deprecated. Please use `icon` instead.');\n        this.state = {\n            closing: true,\n            closed: false,\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderAlert}</ConfigConsumer>;\n    }\n}\n"],"file":"index.js"}