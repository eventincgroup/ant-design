{"version":3,"sources":["locale-provider/index.jsx"],"names":["ANT_MARK","setMomentLocale","locale","moment","LocaleProvider","props","Modal","_ANT_MARK__","antLocale","exist","prevProps","children","React","Component","propTypes","PropTypes","object","defaultProps","childContextTypes"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACO,IAAMA,QAAQ,GAAG,cAAjB;;;AACP,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,MAAIA,MAAM,IAAIA,MAAM,CAACA,MAArB,EAA6B;AACzB,oCAAeC,MAAf,EAAuBD,MAAvB,CAA8BA,MAAM,CAACA,MAArC;AACH,GAFD,MAGK;AACD,oCAAeC,MAAf,EAAuBD,MAAvB,CAA8B,IAA9B;AACH;AACJ;;IACoBE,c;;;;;AACjB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACAJ,IAAAA,eAAe,CAACI,KAAK,CAACH,MAAP,CAAf;AACA,qCAAoBG,KAAK,CAACH,MAAN,IAAgBG,KAAK,CAACH,MAAN,CAAaI,KAAjD;AACA,6BAAQD,KAAK,CAACE,WAAN,KAAsBP,QAA9B,EAAwC,gBAAxC,EAA0D,+GAA1D;AAJe;AAKlB;;;;WACD,2BAAkB;AACd,aAAO;AACHQ,QAAAA,SAAS,EAAE,SAAc,SAAc,EAAd,EAAkB,KAAKH,KAAL,CAAWH,MAA7B,CAAd,EAAoD;AAAEO,UAAAA,KAAK,EAAE;AAAT,SAApD;AADR,OAAP;AAGH;;;WACD,4BAAmBC,SAAnB,EAA8B;AAC1B,UAAQR,MAAR,GAAmB,KAAKG,KAAxB,CAAQH,MAAR;;AACA,UAAIQ,SAAS,CAACR,MAAV,KAAqBA,MAAzB,EAAiC;AAC7BD,QAAAA,eAAe,CAACC,MAAD,CAAf;AACA,yCAAoBA,MAAM,IAAIA,MAAM,CAACI,KAArC;AACH;AACJ;;;WACD,gCAAuB;AACnB;AACH;;;WACD,kBAAS;AACL,aAAO,KAAKD,KAAL,CAAWM,QAAlB;AACH;;;;EAxBuCC,KAAK,CAACC,S;;;AA0BlDT,cAAc,CAACU,SAAf,GAA2B;AACvBZ,EAAAA,MAAM,EAAEa,SAAS,CAACC;AADK,CAA3B;AAGAZ,cAAc,CAACa,YAAf,GAA8B;AAC1Bf,EAAAA,MAAM,EAAE;AADkB,CAA9B;AAGAE,cAAc,CAACc,iBAAf,GAAmC;AAC/BV,EAAAA,SAAS,EAAEO,SAAS,CAACC;AADU,CAAnC","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as moment from 'moment';\nimport interopDefault from '../_util/interopDefault';\nimport { changeConfirmLocale } from '../modal/locale';\nimport warning from '../_util/warning';\nexport const ANT_MARK = 'internalMark';\nfunction setMomentLocale(locale) {\n    if (locale && locale.locale) {\n        interopDefault(moment).locale(locale.locale);\n    }\n    else {\n        interopDefault(moment).locale('en');\n    }\n}\nexport default class LocaleProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        setMomentLocale(props.locale);\n        changeConfirmLocale(props.locale && props.locale.Modal);\n        warning(props._ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale');\n    }\n    getChildContext() {\n        return {\n            antLocale: Object.assign(Object.assign({}, this.props.locale), { exist: true }),\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { locale } = this.props;\n        if (prevProps.locale !== locale) {\n            setMomentLocale(locale);\n            changeConfirmLocale(locale && locale.Modal);\n        }\n    }\n    componentWillUnmount() {\n        changeConfirmLocale();\n    }\n    render() {\n        return this.props.children;\n    }\n}\nLocaleProvider.propTypes = {\n    locale: PropTypes.object,\n};\nLocaleProvider.defaultProps = {\n    locale: {},\n};\nLocaleProvider.childContextTypes = {\n    antLocale: PropTypes.object,\n};\n"],"file":"index.js"}